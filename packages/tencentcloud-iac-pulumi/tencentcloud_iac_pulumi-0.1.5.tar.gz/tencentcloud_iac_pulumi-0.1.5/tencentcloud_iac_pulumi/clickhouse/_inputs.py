# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'InstanceCommonSpecArgs',
    'InstanceDataSpecArgs',
]

@pulumi.input_type
class InstanceCommonSpecArgs:
    def __init__(__self__, *,
                 count: pulumi.Input[int],
                 disk_size: pulumi.Input[int],
                 spec_name: pulumi.Input[str]):
        """
        :param pulumi.Input[int] count: Node count. NOTE: Only support value 3.
        :param pulumi.Input[int] disk_size: Disk size.
        :param pulumi.Input[str] spec_name: Spec name.
        """
        pulumi.set(__self__, "count", count)
        pulumi.set(__self__, "disk_size", disk_size)
        pulumi.set(__self__, "spec_name", spec_name)

    @property
    @pulumi.getter
    def count(self) -> pulumi.Input[int]:
        """
        Node count. NOTE: Only support value 3.
        """
        return pulumi.get(self, "count")

    @count.setter
    def count(self, value: pulumi.Input[int]):
        pulumi.set(self, "count", value)

    @property
    @pulumi.getter(name="diskSize")
    def disk_size(self) -> pulumi.Input[int]:
        """
        Disk size.
        """
        return pulumi.get(self, "disk_size")

    @disk_size.setter
    def disk_size(self, value: pulumi.Input[int]):
        pulumi.set(self, "disk_size", value)

    @property
    @pulumi.getter(name="specName")
    def spec_name(self) -> pulumi.Input[str]:
        """
        Spec name.
        """
        return pulumi.get(self, "spec_name")

    @spec_name.setter
    def spec_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "spec_name", value)


@pulumi.input_type
class InstanceDataSpecArgs:
    def __init__(__self__, *,
                 count: pulumi.Input[int],
                 disk_size: pulumi.Input[int],
                 spec_name: pulumi.Input[str]):
        """
        :param pulumi.Input[int] count: Data spec count.
        :param pulumi.Input[int] disk_size: Disk size.
        :param pulumi.Input[str] spec_name: Spec name.
        """
        pulumi.set(__self__, "count", count)
        pulumi.set(__self__, "disk_size", disk_size)
        pulumi.set(__self__, "spec_name", spec_name)

    @property
    @pulumi.getter
    def count(self) -> pulumi.Input[int]:
        """
        Data spec count.
        """
        return pulumi.get(self, "count")

    @count.setter
    def count(self, value: pulumi.Input[int]):
        pulumi.set(self, "count", value)

    @property
    @pulumi.getter(name="diskSize")
    def disk_size(self) -> pulumi.Input[int]:
        """
        Disk size.
        """
        return pulumi.get(self, "disk_size")

    @disk_size.setter
    def disk_size(self, value: pulumi.Input[int]):
        pulumi.set(self, "disk_size", value)

    @property
    @pulumi.getter(name="specName")
    def spec_name(self) -> pulumi.Input[str]:
        """
        Spec name.
        """
        return pulumi.get(self, "spec_name")

    @spec_name.setter
    def spec_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "spec_name", value)


