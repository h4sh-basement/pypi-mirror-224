Metadata-Version: 2.1
Name: Spire.Doc
Version: 11.8.0
Summary: A 100% standalone Word Python API for Processing Word Files
Home-page: https://www.e-iceblue.com
Author: E-iceblue
Author-email: sales@e-iceblue.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3.6
Classifier: License :: Free To Use But Restricted
Classifier: License :: Other/Proprietary License
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: Unix
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: plum-dispatch (==1.7.4)

# Python API for Word Documents Manipulating and Converting

[![Foo](https://i.imgur.com/FxuTGMR.png)](https://www.e-iceblue.com/Introduce/doc-for-python.html)

[Product Page](https://www.e-iceblue.com/Introduce/doc-for-python.html) | Documentation | Examples | [Forum](https://www.e-iceblue.com/forum/spire-doc-f6.html) | [Temporary License](https://www.e-iceblue.com/TemLicense.html) | [Customized Demo](https://www.e-iceblue.com/Misc/customized-demo.html)

[Spire.Doc for Python](https://www.e-iceblue.com/Introduce/doc-for-python.html) is a professional Python API for processing Word documents. Developers can use this independent Python API to create, read, edit, convert, and compare Word documents with any other external dependencies.

[Spire.Doc for Python](https://www.e-iceblue.com/Introduce/doc-for-python.html) is highly compatible with MS Word. It supports Word 97-2003 /2007/2010/2013/2016/2019 and can convert them to commonly used file formats like XML, RTF, TXT, XPS, EPUB, EMF, HTML, and vice versa. Converting Word Doc/Docx to PDF and HTML to image is also supported.

### Standalone Python API
Spire.Doc for Python is an independent Python API to process Word documents. It doesn't requires MS Word or any other third-party tools.

### Support for Old and New Word Versions
- Word 97-03
- Word 2007
- Word 2010
- Word 2013
- Word 2016
- Word 2019

### Rich Support for Word Document Features
A common use of Spire.Doc for Python is to create Word documents dynamically from scratch. Almost all Word document elements are supported, including pages, sections, headers, footers, digital signatures, footnotes, paragraphs, lists, tables, text, fields, hyperlinks, bookmarks, comments, images, style, background settings, document settings, and protection. Furthermore, drawing objects including shapes, text boxes, images, OLE objects, Latex Math Symbols, MathML Code, and controls are supported as well.

### High-Quality File Conversion
By using Spire.Doc for Python, users can save Word Doc/Docx to stream, save as web response and convert Word Doc/Docx to XML, RTF, EMF, TXT, XPS, EPUB, HTML, SVG, ODT, and vice versa. Spire.Doc for Python also supports converting Word Doc/Docx to PDF and HTML to images.

## Examples

### Create a Word document in Python
```Python
ï»¿import unittest
from spire.doc import *
from spire.doc.common import *
from TestUtil import *
from Compare import *

class HelloWorld_(unittest.TestCase):
    def test__HelloWorld(self):
        TestUtil.LicenseKey()
        outputFile = TestUtil.OutputPath + "Demo/HelloWorld.docx"
        TestUtil.OutFilePathIsExist(TestUtil.OutputPath + "Demo/")

        #Create word document
        document = ConvertUtil.GetNewEngineDocument()

        #Create a new section
        section = document.AddSection()

        #Create a new paragraph
        paragraph = section.AddParagraph()

        #Append Text
        paragraph.AppendText("Hello World!")

        #Save doc file.
        document.SaveToFile(outputFile, FileFormat.Docx)
        document.Close()

        baseLineFile = TestUtil.BaseLinePath + "Demo/HelloWorld.docx"
        #self.assertTrue(Compare.CompareFile(baseLineFile, outputFile))
        self.assertTrue(Compare.CompareFile(baseLineFile, outputFile))

if __name__ == '__main__':
    unittest.main()
```

### Convert Word to PDF
```Python
import unittest
from spire.doc import *
from spire.doc.common import *
from TestUtil import *
from Compare import *


class ToPDF_(unittest.TestCase):

#C# TO PYTHON CONVERTER TASK: C# attributes do not have Python equivalents:
#ORIGINAL LINE: [TestCategory("Demo")][TestCategory("AutoTestDoc004")][Timeout(TestUtil.TIMEOUT)][TestMethod] public void ToPDF()
    def test__ToPDF(self):
        TestUtil.LicenseKey()
        outputFile = TestUtil.OutputPath + "Demo/ToPDF.pdf"
        inputFile = TestUtil.DataPath + "Demo/ConvertedTemplate.docx"
        TestUtil.OutFilePathIsExist(TestUtil.OutputPath + "Demo/")

        #Create word document
        document = ConvertUtil.GetNewEngineDocument()
        document.LoadFromFile(inputFile)

        #Save the document to a PDF file.
        document.SaveToFile(outputFile, FileFormat.PDF)
        document.Close()

#C# TO PYTHON CONVERTER TASK: There is no preprocessor in Python:
##region check data
        baseLineFile = TestUtil.BaseLinePath + "Demo/ToPDF.pdf"
        self.assertTrue(Compare.CompareFile(baseLineFile, outputFile))
#C# TO PYTHON CONVERTER TASK: There is no preprocessor in Python:
##endregion

if __name__ == '__main__':
    unittest.main()
```

### Convert Word to image
```Python
import unittest
from spire.doc import *
from spire.doc.common import *
from TestUtil import *
from Compare import *
from PIL import Image
import io
#from Spire.Doc.Documents import *


class ToImage_(unittest.TestCase):

#C# TO PYTHON CONVERTER TASK: C# attributes do not have Python equivalents:
#ORIGINAL LINE: [TestCategory("Demo")][TestCategory("AutoTestDoc004")][Timeout(TestUtil.TIMEOUT)][TestMethod] public void ToImage()
    def test__ToImage(self):
        TestUtil.LicenseKey()
        outputFile = TestUtil.OutputPath + "Demo/ToImage.png"
        inputFile = TestUtil.DataPath + "Demo/ConvertedTemplate.docx"
        TestUtil.OutFilePathIsExist(TestUtil.OutputPath + "Demo/")

        #Create word document
        document = ConvertUtil.GetNewEngineDocument()
        document.LoadFromFile(inputFile)

        #Save doc file.

        imageStream = document.SaveImageToStreams(0, ImageType.Bitmap)
        imageS = io.BytesIO(imageStream.ToArray())
        image = Image.open(imageS)
        image.save(outputFile)

        document.Close()

#C# TO PYTHON CONVERTER TASK: There is no preprocessor in Python:
##region check data
        baseLineFile = TestUtil.BaseLinePath + "Demo/ToImage.png"
        self.assertTrue(Compare.CompareFile(baseLineFile, outputFile))
#C# TO PYTHON CONVERTER TASK: There is no preprocessor in Python:
##endregion

if __name__ == '__main__':
    unittest.main()
```

[Product Page](https://www.e-iceblue.com/Introduce/doc-for-python.html) | Documentation | Examples | [Forum](https://www.e-iceblue.com/forum/spire-doc-f6.html) | [Temporary License](https://www.e-iceblue.com/TemLicense.html) | [Customized Demo](https://www.e-iceblue.com/Misc/customized-demo.html)

