from typing import overload, Any, Callable, TypeVar, Union
from typing import Tuple, List, Sequence, MutableSequence

Callback = Union[Callable[..., None], None]
Buffer = TypeVar('Buffer')
Pointer = TypeVar('Pointer')
Template = TypeVar('Template')

import vtkmodules.vtkCommonCore
import vtkmodules.vtkCommonExecutionModel

class vtkBandFiltering(vtkmodules.vtkCommonExecutionModel.vtkTableAlgorithm):
    CUSTOM:int
    OCTAVE:int
    THIRD_OCTAVE:int
    def GetApplyFFT(self) -> bool: ...
    def GetBandFilteringMode(self) -> int: ...
    def GetBandFilteringModeMaxValue(self) -> int: ...
    def GetBandFilteringModeMinValue(self) -> int: ...
    def GetDefaultSamplingRate(self) -> float: ...
    def GetFrequencyArrayName(self) -> str: ...
    def GetNumberOfGenerationsFromBase(self, type:str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type:str) -> int: ...
    def GetOctaveSubdivision(self) -> int: ...
    def GetOctaveSubdivisionMaxValue(self) -> int: ...
    def GetOctaveSubdivisionMinValue(self) -> int: ...
    def GetOutputInDecibel(self) -> bool: ...
    def GetReferenceValue(self) -> float: ...
    def GetWindowType(self) -> int: ...
    def GetWindowTypeMaxValue(self) -> int: ...
    def GetWindowTypeMinValue(self) -> int: ...
    def IsA(self, type:str) -> int: ...
    @staticmethod
    def IsTypeOf(type:str) -> int: ...
    def NewInstance(self) -> 'vtkBandFiltering': ...
    @staticmethod
    def SafeDownCast(o:'vtkObjectBase') -> 'vtkBandFiltering': ...
    def SetApplyFFT(self, _arg:bool) -> None: ...
    def SetBandFilteringMode(self, _arg:int) -> None: ...
    def SetDefaultSamplingRate(self, _arg:float) -> None: ...
    def SetFrequencyArrayName(self, _arg:str) -> None: ...
    def SetOctaveSubdivision(self, _arg:int) -> None: ...
    def SetOutputInDecibel(self, _arg:bool) -> None: ...
    def SetReferenceValue(self, _arg:float) -> None: ...
    def SetWindowType(self, _arg:int) -> None: ...

