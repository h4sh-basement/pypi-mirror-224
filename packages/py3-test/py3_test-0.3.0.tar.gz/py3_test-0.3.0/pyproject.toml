[project]
name = "py3_test"
version = "0.3.0"
description = "Add a short description here"
authors = [{ name = "lijc210", email = "lijc210@gmail.com" }]
dependencies = [
    "wheel~=0.40.0",
    "flask~=2.2.3",
    "requests~=2.28.2",
    "fastapi~=0.95.1",
    "apscheduler~=3.10.1",
    "pykafka~=2.8.0",
    "DBUtils~=3.0.3",
    "PyMySQL~=1.0.3",
    "psycopg2-binary~=2.9.6",
    "opencv-python~=4.7.0.72",
    "tornado~=6.3.1",
    "python-ldap~=3.4.3",
    #sudo apt-get install libldap2-dev libsasl2-dev libssl-dev
    "gevent~=22.10.2",
    "pinyin~=0.4.0",
    "line_profiler~=4.0.3",
    "retry~=0.9.2",
    "hdfs~=2.7.0",
    "memory_profiler~=0.61.0",
    "pandas~=2.0.1",
    "scipy~=1.10.1",
    "jieba~=0.42.1",
    "gensim~=4.3.1",
    "simhash~=2.1.2",
    "elasticsearch~=8.7.0",
    "pymongo~=4.3.3",
    "pyhive~=0.6.5",
    "happybase~=1.2.0",
    "pytrie~=0.4.0",
    "schedule~=1.2.0",
    "ezdxf~=1.0.3",
    "fabric~=3.0.1",
    "func_timeout~=4.3.5",
    "graphene~=3.2.2",
    # "grpc~=1.0.0",
    "itchat~=1.3.10",
    "ldap3~=2.9.1",
    "numba~=0.57.0",
    "openpyxl~=3.1.2",
    "sanic~=23.3.0",
    "selenium~=4.9.0",
    "wget~=3.2",
    "scikit-learn~=1.2.2",
    "easybase~=1.1.3",
    "kafka~=1.3.5",
    "grequests~=0.6.0",
    "marisa_trie~=0.8.0",
    "celery~=5.2.7",
    "sqlalchemy~=2.0.12",
    "pickledb~=0.9.2",
    "pyecharts~=2.0.3",
    "py2neo~=2021.2.3",
    "PyQt5~=5.15.9",
    "requests_html~=0.10.0",
    "tqdm~=4.65.0",
    "redis-py-cluster==2.1.3",
    "redis==3.5.3",
    "pyquery~=2.0.0",
    "lxml~=4.9.2",
    "qiniu~=7.10.0",
    "pyautogui~=0.9.53",
    "playwright~=1.33.0",
    "tushare~=1.2.89",
    "PyPDF2~=3.0.1",
    "pycrypto~=2.6.1",
    "pillow~=9.5.0",
    "python-pptx~=0.6.21",
    "sanic_openapi~=21.12.0",
    "pyspark~=3.4.0",
    "sanic_auth~=0.3.0",
    "pyftpdlib~=1.5.7",
    "feedparser~=6.0.10",
    "tuling~=1.2",
    "locust~=2.15.1",
    "matplotlib~=3.7.1",
    "clickhouse-driver~=0.2.6",
    "odps~=3.5.1",
    "cython~=0.29.34",
    "snapshot_phantomjs~=0.0.3",
    # "pypandoc~=1.11",
    "pypandoc_binary~=1.11",
    "huaweicloudsdkcore==3.1.19",
    "gitpython~=3.1.31",
    "click~=8.1.6",
    #"pkuseg~=0.0.25",
]
readme = "README.md"
requires-python = ">= 3.9"
license = { text = "MIT" }

[project.urls]
Homepage = "https://github.com/tiangolo/fastapi"
Documentation = "https://fastapi.tiangolo.com/"
Repository = "https://github.com/tiangolo/fastapi"

[project.scripts]
cli = "py3_test.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "ruff~=0.0.263",
    "black~=23.3.0",
    "pyright~=1.1.306",
    "pre-commit~=3.3.1",
    "pip~=23.1.2",
    "pyupgrade~=3.3.2",
    "pytest~=7.3.1",
    "build~=0.10.0",
    "setuptools~=68.0.0",
]

[[tool.rye.source]]
name = "aliyun"
# url = "https://mirrors.aliyun.com/pypi/simple"
url = "https://pypi.tuna.tsinghua.edu.cn/simple/"

[tool.ruff]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    # "I",  # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
]
ignore = [
    "C901", # too complex
]

# 排除各种通常忽略的目录。
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

extend-exclude = ["*.md", "Pipfile*", "*.toml", "*.sh", "*.txt", "Dockerfile*"]
force-exclude = true
line-length = 500


[tool.black]
force-exclude = '''(.*.sh|.*.md)|requirements.*|.*.toml'''

[tool.pyright]
include = ["src", "tests"]
typeCheckingMode = "basic"             # "off", "basic" and "strict"
reportOptionalMemberAccess = false
reportGeneralTypeIssues = false
reportUnknownMemberType = false
reportUnknownVariableType = false
reportMissingParameterType = false
reportUnknownArgumentType = false
reportUnknownParameterType = false
reportMissingTypeStubs = false
reportUnusedVariable = false
reportConstantRedefinition = false
reportUntypedFunctionDecorator = false
reportUnnecessaryComparison = false
reportFunctionMemberAccess = false
reportPrivateImportUsage = false
reportOptionalContextManager = false

[tool.rye.scripts]
serve = { cmd = "python main.py" }
lint = { chain = [
    "lint:black",
    "lint:black",
    "lint:isort",
    "lint:pyright",
    "lint:pyupgrade",
] }
"lint:ruff" = "ruff api tests --fix"
"lint:black" = "black api tests"
"lint:isort" = "isort api tests"
"lint:pyright" = "pyright api tests"
"lint:pyupgrade" = "pyupgrade `find . -path .venv -name '*.py' -type f`"
