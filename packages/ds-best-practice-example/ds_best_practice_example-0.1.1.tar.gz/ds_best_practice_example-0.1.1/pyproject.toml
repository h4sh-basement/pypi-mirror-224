[tool]
[tool.poetry]
name = "ds-best-practice-example"
version = "0.1.1"
homepage = "https://github.com/cheeyeelim/ds-best-practice-example"
description = "Showcase best practices for structuring a Python package."
authors = ["Chee Yee Lim <cheeyee.lim@gmail.com>"]
readme = "README.md"
license =  "BSD-3-Clause"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: BSD License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
]
packages = [
    { include = "ezml" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = "~3.9"
pip = "^23.2.1"
setuptools = "^68.0.0"
pandas = "^2.0.3"
scikit-learn = "^1.3.0"
hydra-core = "^1.3.2"

black = { version = "^21.5b2", optional = true }
isort = { version = "^5.8.0", optional = true }
flake8 = { version = "^3.9.2", optional = true }
flake8-docstrings = { version = "^1.6.0", optional = true }
mypy = { version = "^0.900", optional = true }
pytest = { version = "^7.4.0", optional = true }
pytest-cov = { version = "^4.1.0", optional = true }
pytest-timeout = { version = "^2.1.0", optional = true }
tox = { version = "^4.7.0", optional = true }
virtualenv = { version = "^20.24.3", optional = true }
mkdocs = { version = "^1.5.2", optional = true }
mkdocs-material = { version = "^9.1.21", optional = true }
mkdocs-material-extensions = { version="^1.1.1",optional = true }
mkdocstrings = { version = "^0.22.0", optional = true }
mkdocstrings-python = { version = "^1.3.0", optional = true }
mkdocs-autorefs = { version = "^0.5.0", optional = true }
mkdocs-include-markdown-plugin = { version = "^6.0.0", optional = true }
mkdocs-git-revision-date-plugin = { version = "^0.3.2", optional = true }
mike = { version = "^1.1.2", optional = true }
twine = { version = "^3.3.0", optional = true }
pre-commit = { version = "^2.12.0", optional = true }
toml = { version = "^0.10.2", optional = true }
bump2version = { version = "^1.0.1", optional = true }
ipykernel = { version = "^6.25.1", optional = true }
hypothesis = { version = "^6.82.3", optional = true }

[tool.poetry.extras]
test = [
    "pytest",
    "pytest-cov",
    "pytest-timeout",
    "black",
    "isort",
    "mypy",
    "flake8",
    "flake8-docstrings",
    "hypothesis",
    ]

dev = [
    "tox",
    "pre-commit",
    "virtualenv",
    "twine",
    "toml",
    "bump2version",
    "ipykernel"
    ]

doc = [
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocstrings-python",
    "mkdocs-material-extension",
    "mkdocs-autorefs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-git-revision-date-plugin",
    "mike"
    ]

[tool.poetry.scripts]
ezml = 'ezml.main:main'

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
